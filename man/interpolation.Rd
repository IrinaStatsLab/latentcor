% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpolation.R
\name{interpolation}
\alias{interpolation}
\title{Parallel version of multilinear interpolation generator for function approximation}
\usage{
interpolation(evalfun, grid_list, cores = detectCores(), ...)
}
\arguments{
\item{evalfun}{The objective function to be approximated.}

\item{grid_list}{A list for grid points (each element of list is a vector represents ticklabels on a dimension). The number of list elements are the dimension of function inputs.}

\item{cores}{The numbers of cores (threads) of your machine to conduct parallel computing.}

\item{...}{Other inputs for objective functions to be passed through.}
}
\value{
\code{interpolation} returns
\itemize{
      \item{value: }{A list of of length p corresponding to each variable. Returns NA for continuous variable; proportion of zeros for binary/truncated variables; the cumulative proportions of zeros and ones (e.g. first value is proportion of zeros, second value is proportion of zeros and ones) for ternary variable.}
      \item{interpolant: }{An interpolant function generated by \code{chebpol::chebpol} for interplation.}
}
}
\description{
Parallel version of multilinear interpolation generator for function approximation
}
\examples{
grid_list_10 = list(seq(-0.9, 0.9, by = 0.1), seq(0.1, 0.9, by = 0.1))
interpolation(evalfun = latentcor:::evalfun, grid_list = grid_list_10,
              comb = "10", tol = 1e-8, ratio = .9)
}
