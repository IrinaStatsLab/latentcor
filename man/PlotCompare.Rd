% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PlotData.R
\name{PlotCompare}
\alias{PlotCompare}
\title{Plot true correlation vs estimated correlation
\code{PlotCompare} is to check unbiasness of estimation by plotting true correlation from simulation data vs estimated correlation from simulation data.}
\usage{
PlotCompare(pairlist, namelist, title)
}
\arguments{
\item{pairlist}{list for data pairs.}

\item{namelist}{list for names of data pairs.}
}
\value{
\code{PlotCompare} returns a plot for data1 against data2 and 45 degree benchmark line.
}
\description{
Plot true correlation vs estimated correlation
\code{PlotCompare} is to check unbiasness of estimation by plotting true correlation from simulation data vs estimated correlation from simulation data.
}
\examples{

library(ggplot2)
### Data setting
n <- 1000; p1 <- 15; p2 <- 10 # sample size and dimensions for two datasets.
maxcancor <- 0.9 # true canonical correlation

### Correlation structure within each data set
set.seed(0)
perm1 <- sample(1:p1, size = p1);
Sigma1 <- autocor(p1, 0.7)[perm1, perm1]
blockind <- sample(1:3, size = p2, replace = TRUE);
Sigma2 <- blockcor(blockind, 0.7)
mu <- rbinom(p1+p2, 1, 0.5)

### true variable indices for each dataset
trueidx1 <- c(rep(1, 3), rep(0, p1-3))
trueidx2 <- c(rep(1, 2), rep(0, p2-2))

# Data generation
simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                        maxcancor = maxcancor,
                        Sigma1 = Sigma1, Sigma2 = Sigma2,
                        copula1 = "exp", copula2 = "cube",
                        muZ = mu,
                        type1 = "trunc", type2 = "trunc",
                        c1 = rep(1, p1), c2 =  rep(0, p2)
)
X1 <- simdata$X1; X2 <- simdata$X2; Sigma12_tt <- simdata$Sigma12
# Estimate latent correlation matrix with original method
R1_tt_org <- estimateR(X1, type = "trunc", method = "original")$R
R2_tt_org <- estimateR(X2, type = "trunc", method = "original")$R
R12_tt_org <- estimateR_mixed(X1, X2, type1 = "trunc", type2 = "trunc",
                              method = "original")$R12;
cp1 <- "exp"; cp2 <- "cube"
for (tp1 in c("continuous", "binary", "trunc")) {
  for (tp2 in c("continuous", "binary", "trunc")) {
    for (md in c("original", "approx")) {
      c1 <- c2 <- NULL
      if (tp1 == "binary" | tp1 == "trunc") {
        c1 <- rep(1, p1)
      } else if (tp1 == "ternary") {
        c1 <- matrix(rep(1:2, p1), nrow = 2, ncol = p1)
      }
      if (tp2 == "binary" | tp2 == "trunc") {
        c2 <- rep(0, p2)
      } else if (tp2 == "ternary") {
        c2 <- matrix(rep(0:1, p2), nrow = 2, ncol = p2)
      }
      simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                                    maxcancor = maxcancor,
                                    Sigma1 = Sigma1, Sigma2 = Sigma2,
                                    copula1 = cp1, copula2 = cp2,
                                    muZ = mu,
                                    type1 = tp1, type2 = tp2,
                                    c1 = c1, c2 = c2)
      X1 <- simdata$X1; X2 <- simdata$X2; Sigma12 <- simdata$Sigma12
      assign(paste("R1", cp1, cp2, tp1, tp2, md, sep = "_"),
             estimateR(X1, type = tp1, method = md)$R)
      assign(paste("R2", cp1, cp2, tp1, tp2, md, sep = "_"),
             estimateR(X2, type = tp2, method = md)$R)
      assign(paste("R12", cp1, cp2, tp1, tp2, md, sep = "_"),
             estimateR_mixed(X1, X2, type1 = tp1, type2 = tp2, method = md)$R12)
      PlotCompare(list(cbind(c(Sigma1), c(get(paste("R1", cp1, cp2, tp1, tp2, md, sep = "_")))),
                       cbind(c(Sigma2), c(get(paste("R2", cp1, cp2, tp1, tp2, md, sep = "_")))),
                       cbind(c(Sigma12), c(get(paste("R12", cp1, cp2, tp1, tp2, md, sep = "_"))))
                        ),
                  list(c("Sigma1", paste("R1", cp1, cp2, tp1, tp2, md, sep = "_")),
                       c("Sigma2", paste("R2", cp1, cp2, tp1, tp2, md, sep = "_")),
                       c("Sigma12", paste("R12", cp1, cp2, tp1, tp2, md, sep = "_"))),
                  "Latent correlation (True vs. Estimated)")
    }
  }
}

# Data generation
simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                        maxcancor = maxcancor,
                        Sigma1 = Sigma1, Sigma2 = Sigma2,
                        copula1 = "exp", copula2 = "cube",
                        muZ = mu,
                        type1 = "ternary", type2 = "ternary",
                        c1 = matrix(rep(1:2, p1), nrow = 2, ncol = p1),
                        c2 =  matrix(rep(0:1, p2), nrow = 2, ncol = p2)
)
X1 <- simdata$X1; X2 <- simdata$X2; Sigma12_nn <- simdata$Sigma12
# Estimate latent correlation matrix with original method
R1_nn_org <- estimateR(X1, type = "ternary", method = "original")$R
R2_nn_org <- estimateR(X2, type = "ternary", method = "original")$R
R12_nn_org <- estimateR_mixed(X1, X2, type1 = "ternary", type2 = "ternary",
                              method = "original")$R12
# Estimate latent correlation matrix with faster approximation method
R1_nn_approx <- estimateR(X1, type = "ternary", method = "approx")$R
R2_nn_approx <- estimateR(X2, type = "ternary", method = "approx")$R
R12_nn_approx <- estimateR_mixed(X1, X2, type1 = "ternary", type2 = "ternary",
                                 method = "approx")$R12
# Data generation
simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                        maxcancor = maxcancor,
                        Sigma1 = Sigma1, Sigma2 = Sigma2,
                        copula1 = "exp", copula2 = "cube",
                        muZ = mu,
                        type1 = "ternary", type2 = "continuous",
                        c1 = matrix(rep(1:2, p1), nrow = 2, ncol = p1),
                        c2 = matrix(rep(0:1, p2), nrow = 2, ncol = p2)
)
X1 <- simdata$X1; X2 <- simdata$X2; Sigma12_nc <- simdata$Sigma12
# Estimate latent correlation matrix with original method
R1_nc_org <- estimateR(X1, type = "ternary", method = "original")$R
R2_nc_org <- estimateR(X2, type = "continuous", method = "original")$R
R12_nc_org <- estimateR_mixed(X1, X2, type1 = "ternary", type2 = "continuous",
                              method = "original")$R12
# Estimate latent correlation matrix with faster approximation method
R1_nc_approx <- estimateR(X1, type = "ternary", method = "approx")$R
R2_nc_approx <- estimateR(X2, type = "continuous", method = "approx")$R
R12_nc_approx <- estimateR_mixed(X1, X2, type1 = "ternary", type2 = "continuous",
                                 method = "approx")$R12
# Data generation
simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                        maxcancor = maxcancor,
                        Sigma1 = Sigma1, Sigma2 = Sigma2,
                        copula1 = "exp", copula2 = "cube",
                        muZ = mu,
                        type1 = "continuous", type2 = "ternary",
                        c1 = matrix(rep(1:2, p1), nrow = 2, ncol = p1),
                        c2 = matrix(rep(0:1, p2), nrow = 2, ncol = p2)
)
X1 <- simdata$X1; X2 <- simdata$X2; Sigma12_cn <- simdata$Sigma12
# Estimate latent correlation matrix with original method
R1_cn_org <- estimateR(X1, type = "continuous", method = "original")$R
R2_cn_org <- estimateR(X2, type = "ternary", method = "original")$R
R12_cn_org <- estimateR_mixed(X1, X2, type1 = "continuous", type2 = "ternary",
                              method = "original")$R12
# Estimate latent correlation matrix with faster approximation method
R1_cn_approx <- estimateR(X1, type = "continuous", method = "approx")$R
R2_cn_approx <- estimateR(X2, type = "ternary", method = "approx")$R
R12_cn_approx <- estimateR_mixed(X1, X2, type1 = "continuous", type2 = "ternary",
                                 method = "approx")$R12
# Data generation
simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                        maxcancor = maxcancor,
                        Sigma1 = Sigma1, Sigma2 = Sigma2,
                        copula1 = "exp", copula2 = "cube",
                        muZ = mu,
                        type1 = "ternary", type2 = "binary",
                        c1 = matrix(rep(1:2, p1), nrow = 2, ncol = p1),
                        c2 = rep(0, p2)
)
X1 <- simdata$X1; X2 <- simdata$X2; Sigma12_nb <- simdata$Sigma12
# Estimate latent correlation matrix with original method
R1_nb_org <- estimateR(X1, type = "ternary", method = "original")$R
R2_nb_org <- estimateR(X2, type = "binary", method = "original")$R
R12_nb_org <- estimateR_mixed(X1, X2, type1 = "ternary", type2 = "binary",
                              method = "original")$R12
# Estimate latent correlation matrix with faster approximation method
R1_nb_approx <- estimateR(X1, type = "ternary", method = "approx")$R
R2_nb_approx <- estimateR(X2, type = "binary", method = "approx")$R
R12_nb_approx <- estimateR_mixed(X1, X2, type1 = "ternary", type2 = "binary",
                                 method = "approx")$R12
# Data generation
simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                        maxcancor = maxcancor,
                        Sigma1 = Sigma1, Sigma2 = Sigma2,
                        copula1 = "exp", copula2 = "cube",
                        muZ = mu,
                        type1 = "binary", type2 = "ternary",
                        c1 = matrix(rep(1:2, p1), nrow = 2, ncol = p1),
                        c2 = rep(0, p2)
)
X1 <- simdata$X1; X2 <- simdata$X2; Sigma12_bn <- simdata$Sigma12
# Estimate latent correlation matrix with original method
R1_bn_org <- estimateR(X1, type = "binary", method = "original")$R
R2_bn_org <- estimateR(X2, type = "ternary", method = "original")$R
R12_bn_org <- estimateR_mixed(X1, X2, type1 = "binary", type2 = "ternary",
                              method = "original")$R12
# Estimate latent correlation matrix with faster approximation method
R1_bn_approx <- estimateR(X1, type = "binary", method = "approx")$R
# R2_bn_approx <- estimateR(X2, type = "ternary", method = "approx")$R
R12_bn_approx <- estimateR_mixed(X1, X2, type1 = "binary", type2 = "ternary",
                                 method = "approx")$R12
# Data generation
simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                        maxcancor = maxcancor,
                        Sigma1 = Sigma1, Sigma2 = Sigma2,
                        copula1 = "exp", copula2 = "cube",
                        muZ = mu,
                        type1 = "ternary", type2 = "trunc",
                        c1 = matrix(rep(1:2, p1), nrow = 2, ncol = p1),
                        c2 = rep(0, p2)
)
X1 <- simdata$X1
X2 <- simdata$X2
Sigma12_nt <- simdata$Sigma12
# Estimate latent correlation matrix with original method
R1_nt_org <- estimateR(X1, type = "ternary", method = "original")$R
R2_nt_org <- estimateR(X2, type = "trunc", method = "original")$R
# R12_nt_org <- estimateR_mixed(X1, X2, type1 = "ternary", type2 = "trunc",
#                               method = "original")$R12
# Estimate latent correlation matrix with faster approximation method
# R1_nt_approx <- estimateR(X1, type = "ternary", method = "approx")$R
R2_nt_approx <- estimateR(X2, type = "trunc", method = "approx")$R
# R12_nt_approx <- estimateR_mixed(X1, X2, type1 = "ternary", type2 = "trunc",
#                                  method = "approx")$R12
# Data generation
simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                        maxcancor = maxcancor,
                        Sigma1 = Sigma1, Sigma2 = Sigma2,
                        copula1 = "exp", copula2 = "cube",
                        muZ = mu,
                        type1 = "trunc", type2 = "ternary",
                        c1 = matrix(rep(1:2, p1), nrow = 2, ncol = p1),
                        c2 = rep(0, p2)
)
X1 <- simdata$X1
X2 <- simdata$X2
Sigma12_tn <- simdata$Sigma12
# Estimate latent correlation matrix with original method
R1_tn_org <- estimateR(X1, type = "trunc", method = "original")$R
R2_tn_org <- estimateR(X2, type = "ternary", method = "original")$R
# R12_tn_org <- estimateR_mixed(X1, X2, type1 = "trunc", type2 = "ternary",
#                               method = "original")$R12
# Estimate latent correlation matrix with faster approximation method
R1_tn_approx <- estimateR(X1, type = "trunc", method = "approx")$R
# R2_tn_approx <- estimateR(X2, type = "ternary", method = "approx")$R
# R12_tn_approx <- estimateR_mixed(X1, X2, type1 = "trunc", type2 = "ternary",
#                                  method = "approx")$R12
### Check the range of truncation levels of variables
range(colMeans(X1 == 0))
range(colMeans(X2 == 0))

}
