% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimateR.R
\name{estimateR}
\alias{estimateR}
\alias{estimateR_mixed}
\title{Estimate latent correlation matrix}
\usage{
estimateR(
  X,
  type = "trunc",
  method = "approx",
  use.nearPD = TRUE,
  nu = 0.01,
  tol = 0.001,
  verbose = FALSE,
  ratio = 0.9
)

estimateR_mixed(
  X1,
  X2,
  type1 = "trunc",
  type2 = "continuous",
  method = "approx",
  use.nearPD = TRUE,
  nu = 0.01,
  tol = 0.001,
  verbose = FALSE,
  ratio = 0.9
)
}
\arguments{
\item{X}{A numeric data matrix (n by p), n is the sample size and p is the number of variables.}

\item{type}{A type of variables in \code{X}, must be one of "continuous", "binary" or "trunc".}

\item{method}{The calculation method of latent correlation. Either "original" method or "approx". If \code{method = "approx"}, multilinear approximation method is used, which is much faster than the original method. If \code{method = "original"}, optimization of the bridge inverse function is used. The default is "approx".}

\item{use.nearPD}{A logical value indicating whether to use \link[Matrix]{nearPD} or not when the resulting correlation estimator is not positive definite (have at least one negative eigenvalue).}

\item{nu}{Shrinkage parameter for correlation matrix, must be between 0 and 1, the default value is 0.01.}

\item{tol}{Desired accuracy when calculating the solution of bridge function.}

\item{verbose}{If \code{verbose = FALSE}, printing information whether nearPD is used or not is disabled. The default value is FALSE.}

\item{ratio}{The maximum ratio of Kendall's tau and boundary to implement multilinear interpolation.}

\item{X1}{A numeric data matrix (n by p1).}

\item{X2}{A numeric data matrix (n by p2).}

\item{type1}{A type of variables in \code{X1}, must be one of "continuous", "binary" or "trunc".}

\item{type2}{A type of variables in \code{X2}, must be one of "continuous", "binary" or "trunc".}
}
\value{
\code{estimateR} returns
\itemize{
      \item{type: }{Type of the data matrix \code{X}}
      \item{R: }{Estimated p by p latent correlation matrix of \code{X}}
}

\code{estimateR_mixed} returns
\itemize{
      \item{type1: }{Type of the data matrix \code{X1}}
      \item{type2: }{Type of the data matrix \code{X2}}
      \item{R: }{Estimated latent correlation matrix of whole \code{X} = (\code{X1}, \code{X2}) (p1+p2 by p1+p2)}
      \item{R1: }{Estimated latent correlation matrix of \code{X1} (p1 by p1)}
      \item{R2: }{Estimated latent correlation matrix of \code{X2} (p2 by p2)}
      \item{R12: }{Estimated latent correlation matrix between \code{X1} and \code{X2} (p1 by p2)}
}
}
\description{
Estimation of latent correlation matrix from observed data of (possibly) mixed types (continuous/biary/truncated continuous) based on the latent Gaussian copula model.
}
\examples{

library(ggplot2)
### Data setting
n <- 1000; p1 <- 15; p2 <- 10 # sample size and dimensions for two datasets.
maxcancor <- 0.9 # true canonical correlation

### Correlation structure within each data set
set.seed(0)
perm1 <- sample(1:p1, size = p1);
Sigma1 <- autocor(p1, 0.7)[perm1, perm1]
blockind <- sample(1:3, size = p2, replace = TRUE);
Sigma2 <- blockcor(blockind, 0.7)
mu <- rbinom(p1+p2, 1, 0.5)

### true variable indices for each dataset
trueidx1 <- c(rep(1, 3), rep(0, p1-3))
trueidx2 <- c(rep(1, 2), rep(0, p2-2))

# Data generation
simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                        maxcancor = maxcancor,
                        Sigma1 = Sigma1, Sigma2 = Sigma2,
                        copula1 = "exp", copula2 = "cube",
                        muZ = mu,
                        type1 = "binary", type2 = "continuous",
                        c1 = rep(1, p1), c2 =  NULL
)
X1 <- simdata$X1; X2 <- simdata$X2; Sigma12_tt <- simdata$Sigma12
# Estimate latent correlation matrix with original method
R1_tt_org <- estimateR(X1, type = "binary", method = "original")$R
R2_tt_org <- estimateR(X2, type = "continuous", method = "original")$R
R12_tt_org <- estimateR_mixed(X1, X2, type1 = "binary", type2 = "continuous",
                              method = "original")$R12;
cp1 <- "exp"; cp2 <- "cube"
for (tp1 in c("continuous", "binary", "ternary")) {
  for (tp2 in c("continuous", "binary", "ternary")) {
    for (md in c("original", "ml", "approx")) {
      c1 <- c2 <- NULL
      if (tp1 == "binary" | tp1 == "trunc") {
        c1 <- rep(1, p1)
      } else if (tp1 == "ternary") {
        c1 <- matrix(rep(1:2, p1), nrow = 2, ncol = p1)
      }
      if (tp2 == "binary" | tp2 == "trunc") {
        c2 <- rep(0, p2)
      } else if (tp2 == "ternary") {
        c2 <- matrix(rep(0:1, p2), nrow = 2, ncol = p2)
      }
      simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                                    maxcancor = maxcancor,
                                    Sigma1 = Sigma1, Sigma2 = Sigma2,
                                    copula1 = cp1, copula2 = cp2,
                                    muZ = mu,
                                    type1 = tp1, type2 = tp2,
                                    c1 = c1, c2 = c2)
      X1 <- simdata$X1; X2 <- simdata$X2; Sigma12 <- simdata$Sigma12
      assign(paste("R1", cp1, cp2, tp1, tp2, md, sep = "_"),
             estimateR(X1, type = tp1, method = md)$R)
      assign(paste("R2", cp1, cp2, tp1, tp2, md, sep = "_"),
             estimateR(X2, type = tp2, method = md)$R)
      assign(paste("R12", cp1, cp2, tp1, tp2, md, sep = "_"),
             estimateR_mixed(X1, X2, type1 = tp1, type2 = tp2, method = md)$R12)
      PlotCompare(list(cbind(c(Sigma1), c(get(paste("R1", cp1, cp2, tp1, tp2, md, sep = "_")))),
                       cbind(c(Sigma2), c(get(paste("R2", cp1, cp2, tp1, tp2, md, sep = "_")))),
                       cbind(c(Sigma12), c(get(paste("R12", cp1, cp2, tp1, tp2, md, sep = "_"))))
                        ),
                  list(c("Sigma1", paste("R1", cp1, cp2, tp1, tp2, md, sep = "_")),
                       c("Sigma2", paste("R2", cp1, cp2, tp1, tp2, md, sep = "_")),
                       c("Sigma12", paste("R12", cp1, cp2, tp1, tp2, md, sep = "_"))),
                  "Latent correlation (True vs. Estimated)")
    }
  }
}

# Data generation
simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                        maxcancor = maxcancor,
                        Sigma1 = Sigma1, Sigma2 = Sigma2,
                        copula1 = "exp", copula2 = "cube",
                        muZ = mu,
                        type1 = "ternary", type2 = "ternary",
                        c1 = matrix(rep(1:2, p1), nrow = 2, ncol = p1),
                        c2 =  matrix(rep(0:1, p2), nrow = 2, ncol = p2)
)
X1 <- simdata$X1; X2 <- simdata$X2; Sigma12_nn <- simdata$Sigma12
# Estimate latent correlation matrix with original method
R1_nn_org <- estimateR(X1, type = "ternary", method = "original")$R
R2_nn_org <- estimateR(X2, type = "ternary", method = "original")$R
R12_nn_org <- estimateR_mixed(X1, X2, type1 = "ternary", type2 = "ternary",
                              method = "original")$R12
# Estimate latent correlation matrix with faster approximation method
R1_nn_approx <- estimateR(X1, type = "ternary", method = "approx")$R
R2_nn_approx <- estimateR(X2, type = "ternary", method = "approx")$R
R12_nn_approx <- estimateR_mixed(X1, X2, type1 = "ternary", type2 = "ternary",
                                 method = "approx")$R12
# Data generation
simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                        maxcancor = maxcancor,
                        Sigma1 = Sigma1, Sigma2 = Sigma2,
                        copula1 = "exp", copula2 = "cube",
                        muZ = mu,
                        type1 = "ternary", type2 = "continuous",
                        c1 = matrix(rep(1:2, p1), nrow = 2, ncol = p1),
                        c2 = matrix(rep(0:1, p2), nrow = 2, ncol = p2)
)
X1 <- simdata$X1; X2 <- simdata$X2; Sigma12_nc <- simdata$Sigma12
# Estimate latent correlation matrix with original method
R1_nc_org <- estimateR(X1, type = "ternary", method = "original")$R
R2_nc_org <- estimateR(X2, type = "continuous", method = "original")$R
R12_nc_org <- estimateR_mixed(X1, X2, type1 = "ternary", type2 = "continuous",
                              method = "original")$R12
# Estimate latent correlation matrix with faster approximation method
R1_nc_approx <- estimateR(X1, type = "ternary", method = "approx")$R
R2_nc_approx <- estimateR(X2, type = "continuous", method = "approx")$R
R12_nc_approx <- estimateR_mixed(X1, X2, type1 = "ternary", type2 = "continuous",
                                 method = "approx")$R12
# Data generation
simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                        maxcancor = maxcancor,
                        Sigma1 = Sigma1, Sigma2 = Sigma2,
                        copula1 = "exp", copula2 = "cube",
                        muZ = mu,
                        type1 = "continuous", type2 = "ternary",
                        c1 = matrix(rep(1:2, p1), nrow = 2, ncol = p1),
                        c2 = matrix(rep(0:1, p2), nrow = 2, ncol = p2)
)
X1 <- simdata$X1; X2 <- simdata$X2; Sigma12_cn <- simdata$Sigma12
# Estimate latent correlation matrix with original method
R1_cn_org <- estimateR(X1, type = "continuous", method = "original")$R
R2_cn_org <- estimateR(X2, type = "ternary", method = "original")$R
R12_cn_org <- estimateR_mixed(X1, X2, type1 = "continuous", type2 = "ternary",
                              method = "original")$R12
# Estimate latent correlation matrix with faster approximation method
R1_cn_approx <- estimateR(X1, type = "continuous", method = "approx")$R
R2_cn_approx <- estimateR(X2, type = "ternary", method = "approx")$R
R12_cn_approx <- estimateR_mixed(X1, X2, type1 = "continuous", type2 = "ternary",
                                 method = "approx")$R12
# Data generation
simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                        maxcancor = maxcancor,
                        Sigma1 = Sigma1, Sigma2 = Sigma2,
                        copula1 = "exp", copula2 = "cube",
                        muZ = mu,
                        type1 = "ternary", type2 = "binary",
                        c1 = matrix(rep(1:2, p1), nrow = 2, ncol = p1),
                        c2 = rep(0, p2)
)
X1 <- simdata$X1; X2 <- simdata$X2; Sigma12_nb <- simdata$Sigma12
# Estimate latent correlation matrix with original method
R1_nb_org <- estimateR(X1, type = "ternary", method = "original")$R
R2_nb_org <- estimateR(X2, type = "binary", method = "original")$R
R12_nb_org <- estimateR_mixed(X1, X2, type1 = "ternary", type2 = "binary",
                              method = "original")$R12
# Estimate latent correlation matrix with faster approximation method
R1_nb_approx <- estimateR(X1, type = "ternary", method = "approx")$R
R2_nb_approx <- estimateR(X2, type = "binary", method = "approx")$R
R12_nb_approx <- estimateR_mixed(X1, X2, type1 = "ternary", type2 = "binary",
                                 method = "approx")$R12
# Data generation
simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                        maxcancor = maxcancor,
                        Sigma1 = Sigma1, Sigma2 = Sigma2,
                        copula1 = "exp", copula2 = "cube",
                        muZ = mu,
                        type1 = "binary", type2 = "ternary",
                        c1 = matrix(rep(1:2, p1), nrow = 2, ncol = p1),
                        c2 = rep(0, p2)
)
X1 <- simdata$X1; X2 <- simdata$X2; Sigma12_bn <- simdata$Sigma12
# Estimate latent correlation matrix with original method
R1_bn_org <- estimateR(X1, type = "binary", method = "original")$R
R2_bn_org <- estimateR(X2, type = "ternary", method = "original")$R
R12_bn_org <- estimateR_mixed(X1, X2, type1 = "binary", type2 = "ternary",
                              method = "original")$R12
# Estimate latent correlation matrix with faster approximation method
R1_bn_approx <- estimateR(X1, type = "binary", method = "approx")$R
# R2_bn_approx <- estimateR(X2, type = "ternary", method = "approx")$R
R12_bn_approx <- estimateR_mixed(X1, X2, type1 = "binary", type2 = "ternary",
                                 method = "approx")$R12
# Data generation
simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                        maxcancor = maxcancor,
                        Sigma1 = Sigma1, Sigma2 = Sigma2,
                        copula1 = "exp", copula2 = "cube",
                        muZ = mu,
                        type1 = "ternary", type2 = "trunc",
                        c1 = matrix(rep(1:2, p1), nrow = 2, ncol = p1),
                        c2 = rep(0, p2)
)
X1 <- simdata$X1
X2 <- simdata$X2
Sigma12_nt <- simdata$Sigma12
# Estimate latent correlation matrix with original method
R1_nt_org <- estimateR(X1, type = "ternary", method = "original")$R
R2_nt_org <- estimateR(X2, type = "trunc", method = "original")$R
# R12_nt_org <- estimateR_mixed(X1, X2, type1 = "ternary", type2 = "trunc",
#                               method = "original")$R12
# Estimate latent correlation matrix with faster approximation method
# R1_nt_approx <- estimateR(X1, type = "ternary", method = "approx")$R
R2_nt_approx <- estimateR(X2, type = "trunc", method = "approx")$R
# R12_nt_approx <- estimateR_mixed(X1, X2, type1 = "ternary", type2 = "trunc",
#                                  method = "approx")$R12
# Data generation
simdata <- GenerateData(n=n, trueidx1 = trueidx1, trueidx2 = trueidx2,
                        maxcancor = maxcancor,
                        Sigma1 = Sigma1, Sigma2 = Sigma2,
                        copula1 = "exp", copula2 = "cube",
                        muZ = mu,
                        type1 = "trunc", type2 = "ternary",
                        c1 = matrix(rep(1:2, p1), nrow = 2, ncol = p1),
                        c2 = rep(0, p2)
)
X1 <- simdata$X1
X2 <- simdata$X2
Sigma12_tn <- simdata$Sigma12
# Estimate latent correlation matrix with original method
R1_tn_org <- estimateR(X1, type = "trunc", method = "original")$R
R2_tn_org <- estimateR(X2, type = "ternary", method = "original")$R
# R12_tn_org <- estimateR_mixed(X1, X2, type1 = "trunc", type2 = "ternary",
#                               method = "original")$R12
# Estimate latent correlation matrix with faster approximation method
R1_tn_approx <- estimateR(X1, type = "trunc", method = "approx")$R
# R2_tn_approx <- estimateR(X2, type = "ternary", method = "approx")$R
# R12_tn_approx <- estimateR_mixed(X1, X2, type1 = "trunc", type2 = "ternary",
#                                  method = "approx")$R12
### Check the range of truncation levels of variables
range(colMeans(X1 == 0))
range(colMeans(X2 == 0))

}
\references{
Fan J., Liu H., Ning Y. and Zou H. (2017) "High dimensional semiparametric latent graphicalmodel for mixed data" <doi:10.1111/rssb.12168>.

Yoon G., Carroll R.J. and Gaynanova I. (2020) "Sparse semiparametric canonical correlation analysis for data of mixed types" <doi:10.1093/biomet/asaa007>.

Yoon G., Müller C.L., Gaynanova I. (2020) "Fast computation of latent correlations" <arXiv:2006.13875>.
}
